###Ashish- HIVE assignment-1:

Q1: Find out the total no of users in the dataset:

select * from facebook;

################################################################################
Q2: Find out the no of users above the age of 25:

select count(*) from facebook where age>25;

################################################################################
Q3: Do male face book users tend to have more friends or female users:

select count(friends) from facebook where user='Male'
minus
select count(friends) from facebook where user='Female';
#################################################################################
Q4: How many likes do young people receive on facebook as opposed to old people:

select count(likes) from facebook where age>18
minus
select count(likes) from facebook where age<18;

##################################################################################
Q5: Find out the count of facebook users for each birthday month:

select count(*),month from facebook group by month;

####################################################################################
Q6: Do young members use mobile phones or computers for facebook browsing:

select count(*) from facebook where gadget='phones' and age<18 
minus
select count(*) from facebook where gadget='computer' and age<18;

####################################################################################
Q7: Do adult members use mobile phones or computers for facebook browsing:

select count(*) from facebook where gadget='phones' and age>18 
minus
select count(*) from facebook where gadget='computer' and age>18;

####################################################################################


######### HIVE -Assignment2:Create external tables for drivers and timesheet data and answer the following queries

Query:How many total hours and miles logged by each driver?

set hive.cli.print.header=true;
Select d.driverId,sum(t.hours) ,sum(t.miles) 
FROM driver d
JOIN timesheet t
ON d.driverId = t.driverId
GROUP BY d.driverId;

#####################################################################################
Query: Print the name of the driver in the above query

set hive.cli.print.header=true;
Select d.driverId,d.name,sum(t.hours),sum(t.miles)
FROM driver d
JOIN timesheet t
ON d.driverId = t.driverId
GROUP BY d.driverId,d.name;

#####################################################################################
Query: Write the above query output in to hdfs directory

INSERT OVERWRITE DIRECTORY '/user/mavricbdhnov0433/driverquery'
Select d.driverId,d.name,sum(t.hours),sum(t.mileslogged)
FROM driver d
JOIN timesheet t
ON d.driverId = t.driverId
GROUP BY d.driverId,d.name;

###########################################################################################

########### HIVE ASSIGNMENT-2:


Part1:
hdfs dfs -mkdir -p /user/ashish/rawdata/airline/flights
hdfs dfs -mkdir -p /user/ashish/rawdata/airline/planeinfo
hdfs dfs -mkdir -p /user/ashish/rawdata/airline/airport
hdfs dfs -mkdir -p /user/ashish/rawdata/airline/carriers

CREATE DATABASE airline_db_1;
USE airline_db_1;

-- Create the external table Airports_stg
CREATE EXTERNAL TABLE Airports_stg (
    IATA STRING,
    Name STRING,
    City STRING,
    State STRING,
    Country STRING,
    Lat DECIMAL(9, 6),
    Long DECIMAL(9, 6)
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
LOCATION '/user/ashish/rawdata/airline/airports'
tblproperties(
"skip.header.line.count"="1"
);

CREATE EXTERNAL TABLE Carrier_stg (
    Code STRING,
    Description STRING
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
LOCATION '/user/ashish/rawdata/airline/carriers'
tblproperties(
"skip.header.line.count"="1"
);

CREATE EXTERNAL TABLE PlaneInfo_stg (
    tailNum STRING,
    type STRING,
    manufacturer STRING,
    issue_date STRING,
    model STRING,
    status STRING,
    aircraft_type STRING
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
LOCATION '/user/ashish/rawdata/airline/planeinfo'
tblproperties(
"skip.header.line.count"="1"
);


-- Create the database if it doesn't exist
CREATE DATABASE IF NOT EXISTS airline_db;

-- Use the airline_db database
USE airline_db;

-- Create the external table Flights_stg
CREATE EXTERNAL TABLE Flights_stg (
    Year INT,
    Month INT,
    DayofMonth INT,
    DayOfWeek INT,
    DepTime INT,
    CRSDepTime INT,
    ArrTime INT,
    CRSArrTime INT,
    UniqueCarrier STRING,
    FlightNum STRING,
    TailNum STRING,
    ActualElapsedTime INT,
    CRSElapsedTime INT,
    AirTime INT,
    ArrDelay INT,
    DepDelay INT,
    Origin STRING,
    Dest STRING,
    Distance INT,
    TaxiIn STRING,
    TaxiOut STRING,
    Cancelled STRING,
    CancellationCode STRING,
    Diverted STRING,
    CarrierDelay INT,
    WeatherDelay INT,
    NASDelay INT,
    SecurityDelay INT,
    LateAircraftDelay INT
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
LOCATION '/user/ashish/rawdata/airline/flights'
tblproperties(
"skip.header.line.count"="1"
);

LOAD DATA LOCAL INPATH 'AirlinesOntimeAnalysis/airports.csv' OVERWRITE INTO TABLE Airports_stg;
LOAD DATA LOCAL INPATH 'AirlinesOntimeAnalysis/carriers.csv' OVERWRITE INTO TABLE Carrier_stg;
LOAD DATA LOCAL INPATH 'AirlinesOntimeAnalysis/plane-data.csv' OVERWRITE INTO TABLE PlaneInfo_stg;
LOAD DATA LOCAL INPATH 'AirlinesOntimeAnalysis/2003.csv' OVERWRITE INTO TABLE Flights_stg;
LOAD DATA LOCAL INPATH 'AirlinesOntimeAnalysis/2004.csv' OVERWRITE INTO TABLE Flights_stg;
LOAD DATA LOCAL INPATH 'AirlinesOntimeAnalysis/2005.csv' OVERWRITE INTO TABLE Flights_stg;



1. INSERT OVERWRITE DIRECTORY '/user/ashish/Flight_delay_analysis'
SELECT
    Month,
    AVG(ArrDelay) AS avg_arrival_delay,
    AVG(DepDelay) AS avg_departure_delay
FROM Flights_stg
WHERE Year = 2004
GROUP BY Month
ORDER BY Month;

hdfs dfs -cat /user/ashish/Flight_delay_analysis/000000_0 
hdfs dfs -ls /user/ashish/Flight_delay_analysis

##############################

Part2
-- Create an external Parquet table 
CREATE EXTERNAL TABLE flights_pq (
    Year INT,
    Month INT,
    DayofMonth INT,
    DayOfWeek INT,
    DepTime INT,
    CRSDepTime INT,
    ArrTime INT,
    CRSArrTime INT,
    UniqueCarrier STRING,
    FlightNum STRING,
    TailNum STRING,
    ActualElapsedTime INT,
    CRSElapsedTime INT,
    AirTime INT,
    ArrDelay INT,
    DepDelay INT,
    Origin STRING,
    Dest STRING,
    Distance INT,
    TaxiIn STRING,
    TaxiOut STRING,
    Cancelled STRING,
    CancellationCode STRING,
    Diverted STRING,
    CarrierDelay INT,
    WeatherDelay INT,
    NASDelay INT,
    SecurityDelay INT,
    LateAircraftDelay INT
)
STORED AS PARQUET
LOCATION '/user/ashish/output/airline/pq_flights';


INSERT OVERWRITE TABLE flights_pq
SELECT
    *
FROM Flights_stg;


Query-
SELECT
    Month,
    AVG(ArrDelay) AS avg_arrival_delay,
    AVG(DepDelay) AS avg_departure_delay
FROM flights_pq
WHERE Year = 2004
GROUP BY Month
ORDER BY Month;

##################################################################################################################
